{"ast":null,"code":"var _jsxFileName = \"D:\\\\jkim0\\\\git proj\\\\tacticshelperv2\\\\tacticsHelperv2\\\\client\\\\src\\\\UseMatchCard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport UseAugmentList from './UseAugmentList'; // Assuming these are imported components\nimport UseTraitList from './UseTraitList';\n\n/**\r\n * UseMatchCard component is used to render information about a specific match, including\r\n * the player's placement, game time, augments, and traits. It also displays the Little Legend\r\n * used by the player in that match.\r\n *\r\n * @component\r\n * @param {number} index - The index of the match (used for labeling the match as Game X).\r\n * @param {Object} info - Object containing the information about the match.\r\n * @param {number} info.placement - The placement of the player in the match.\r\n * @param {number} info.time_eliminated - The time the player was eliminated, in seconds.\r\n * @param {Array} info.augments - Array of augments chosen by the player in the match.\r\n * @param {Array} info.traits - Array of traits used by the player, containing trait name and tier information.\r\n * @param {number} info.traits[].tier_current - The current tier level of the trait.\r\n * @param {string} info.traits[].name - The name of the trait.\r\n * @param {string} companion - The ID of the Little Legend companion used by the player.\r\n *\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UseMatchCard = ({\n  index,\n  info,\n  companion\n}) => {\n  _s();\n  // sets Link to get the image link for Little Legend\n  const [LLLink, setLink] = useState('');\n\n  /**\r\n   * Fetches the image of the Little Legend (Tactician) based on the companion ID.\r\n   * Makes an API call to a local server to retrieve the Little Legend's image filename.\r\n   * The image link is then set using `setLink`.\r\n   *\r\n   * @param {string} itemID - The ID of the tactician to get the image for.\r\n   */\n  function getTactician(itemID) {\n    axios.get('http://localhost:4000/getLL', {\n      params: {\n        tactician: itemID\n      }\n    }).then(response => {\n      setLink(`https://ddragon.leagueoflegends.com/cdn/14.12.1/img/tft-tactician/` + response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  // Runs the getTactician function once when the component mounts\n  useEffect(() => {\n    getTactician(companion);\n  }, [companion]);\n\n  // Render the match card component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matchCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"matchCard_img\",\n      src: LLLink,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchCard_text\",\n      children: [\"Game \", index + 1, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Placement: \", info.placement, \" | Game Time:\", ' ', Math.floor(info.time_eliminated / 60), \":\", Math.round(info.time_eliminated % 60).toLocaleString('en-US', {\n          minimumIntegerDigits: 2,\n          useGrouping: false\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: info.augments.map((aInfo, aIndex) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(UseAugmentList, {\n            augName: aInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: info.traits.map((tInfo, tIndex) => tInfo.tier_current > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(UseTraitList, {\n            traitName: tInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(UseMatchCard, \"GW8G21bua+rgOtmTe6Jn1FTwM/I=\");\n_c = UseMatchCard;\nexport default UseMatchCard;\nvar _c;\n$RefreshReg$(_c, \"UseMatchCard\");","map":{"version":3,"names":["useState","useEffect","axios","UseAugmentList","UseTraitList","jsxDEV","_jsxDEV","Fragment","_Fragment","UseMatchCard","index","info","companion","_s","LLLink","setLink","getTactician","itemID","get","params","tactician","then","response","data","catch","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","placement","Math","floor","time_eliminated","round","toLocaleString","minimumIntegerDigits","useGrouping","augments","map","aInfo","aIndex","augName","traits","tInfo","tIndex","tier_current","traitName","name","_c","$RefreshReg$"],"sources":["D:/jkim0/git proj/tacticshelperv2/tacticsHelperv2/client/src/UseMatchCard.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport UseAugmentList from './UseAugmentList'; // Assuming these are imported components\r\nimport UseTraitList from './UseTraitList';\r\n\r\n/**\r\n * UseMatchCard component is used to render information about a specific match, including\r\n * the player's placement, game time, augments, and traits. It also displays the Little Legend\r\n * used by the player in that match.\r\n *\r\n * @component\r\n * @param {number} index - The index of the match (used for labeling the match as Game X).\r\n * @param {Object} info - Object containing the information about the match.\r\n * @param {number} info.placement - The placement of the player in the match.\r\n * @param {number} info.time_eliminated - The time the player was eliminated, in seconds.\r\n * @param {Array} info.augments - Array of augments chosen by the player in the match.\r\n * @param {Array} info.traits - Array of traits used by the player, containing trait name and tier information.\r\n * @param {number} info.traits[].tier_current - The current tier level of the trait.\r\n * @param {string} info.traits[].name - The name of the trait.\r\n * @param {string} companion - The ID of the Little Legend companion used by the player.\r\n *\r\n */\r\nconst UseMatchCard = ({ index, info, companion }) => {\r\n  // sets Link to get the image link for Little Legend\r\n  const [LLLink, setLink] = useState('');\r\n\r\n  /**\r\n   * Fetches the image of the Little Legend (Tactician) based on the companion ID.\r\n   * Makes an API call to a local server to retrieve the Little Legend's image filename.\r\n   * The image link is then set using `setLink`.\r\n   *\r\n   * @param {string} itemID - The ID of the tactician to get the image for.\r\n   */\r\n  function getTactician(itemID) {\r\n    axios\r\n      .get('http://localhost:4000/getLL', { params: { tactician: itemID } })\r\n      .then((response) => {\r\n        setLink(`https://ddragon.leagueoflegends.com/cdn/14.12.1/img/tft-tactician/` + response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  // Runs the getTactician function once when the component mounts\r\n  useEffect(() => {\r\n    getTactician(companion);\r\n  }, [companion]);\r\n\r\n  // Render the match card component\r\n  return (\r\n    <div className=\"matchCard\">\r\n      {/* Image of the Little Legend */}\r\n      <img className=\"matchCard_img\" src={LLLink} alt=\"\" />\r\n      <div className=\"matchCard_text\">\r\n        {/* Display the game index and match details */}\r\n        Game {index + 1}\r\n        <p>\r\n          Placement: {info.placement} | Game Time:{' '}\r\n          {Math.floor(info.time_eliminated / 60)}:\r\n          {Math.round(info.time_eliminated % 60).toLocaleString('en-US', {\r\n            minimumIntegerDigits: 2,\r\n            useGrouping: false,\r\n          })}\r\n        </p>\r\n        {/* List of augments used in the match */}\r\n        <p>\r\n          {info.augments.map((aInfo, aIndex) => (\r\n            <>\r\n              <UseAugmentList augName={aInfo} />\r\n            </>\r\n          ))}\r\n        </p>\r\n        {/* List of traits with current tier greater than 0 */}\r\n        <p>\r\n          {info.traits.map((tInfo, tIndex) =>\r\n            tInfo.tier_current > 0 ? (\r\n              <>\r\n                <UseTraitList traitName={tInfo.name} />\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )\r\n          )}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UseMatchCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}